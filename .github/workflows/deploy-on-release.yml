name: Deploy on Release

on:
  release:
    types: [published, prereleased]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      MVN_CENTRAL_USR: ${{ secrets.MVN_CENTRAL_USR }}
      MVN_CENTRAL_PWD: ${{ secrets.MVN_CENTRAL_PWD }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Get current version from POM
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Adjust version for pre-release or release
        run: |
          CURRENT_VERSION="${{ steps.get_version.outputs.version }}"
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            # For a pre-release, ensure version has "-SNAPSHOT"
            if [[ "$CURRENT_VERSION" != *-SNAPSHOT ]]; then
              mvn versions:set -DnewVersion="${CURRENT_VERSION}-SNAPSHOT"
            fi
          else
            # For a full release, remove "-SNAPSHOT" if present
            CLEAN_VERSION="${CURRENT_VERSION/-SNAPSHOT/}"
            mvn versions:set -DnewVersion="$CLEAN_VERSION"
          fi

      - name: Build and Deploy with Maven
        run: mvn -s ./settings.xml deploy

      - name: Find the built JAR
        id: find_jar
        run: |
          JAR_PATH=$(ls target/*.jar | head -n 1)
          echo "jar-path=$JAR_PATH" >> $GITHUB_OUTPUT
          echo "jar-name=$(basename $JAR_PATH)" >> $GITHUB_OUTPUT

      - name: Upload artifact to the Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.jar-path }}
          asset_name: ${{ steps.find_jar.outputs.jar-name }}
          asset_content_type: application/octet-stream
