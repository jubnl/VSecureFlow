name: Deploy Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Sonatype/Maven Central credentials
      MVN_CENTRAL_USR: ${{ secrets.MVN_CENTRAL_USR }}
      MVN_CENTRAL_PWD: ${{ secrets.MVN_CENTRAL_PWD }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Import GPG private key
        run: |
          # The secret should include the full ASCII-armored key 
          # (-----BEGIN PGP PRIVATE KEY BLOCK----- ... -----END PGP PRIVATE KEY BLOCK-----)
          echo "$GPG_PRIVATE_KEY" > private.key
          gpg --batch --import private.key
          rm private.key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: (Optional) Set GPG trust level
        run: |
          KEY_ID=$(gpg --list-keys --with-colons | grep pub | cut -d ':' -f 5 | head -1)
          echo -e "trust\n5\ny\nquit" | gpg --command-fd 0 --batch --edit-key "$KEY_ID"

      - name: Build & Deploy with Maven
        run: mvn clean deploy -s ./settings.xml

      - name: Find the built JAR
        id: find_jar
        run: |
          # Finds the first .jar file in target/
          JAR_PATH=$(ls target/*.jar | head -n 1)
          echo "jar-path=$JAR_PATH" >> $GITHUB_OUTPUT
          echo "jar-name=$(basename $JAR_PATH)" >> $GITHUB_OUTPUT

      - name: Upload artifact to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.jar-path }}
          asset_name: ${{ steps.find_jar.outputs.jar-name }}
          asset_content_type: application/octet-stream
